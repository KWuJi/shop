<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.BookMapper">
  <resultMap id="BaseResultMap" type="pojo.Book">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="bookname" jdbcType="VARCHAR" property="bookname" />
    <result column="bookinfo" jdbcType="VARCHAR" property="bookinfo" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="saleNumber" jdbcType="INTEGER" property="salenumber" />
    <result column="publicSource" jdbcType="VARCHAR" property="publicsource" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="date" jdbcType="TIMESTAMP" property="date" />
    <result column="image" jdbcType="VARCHAR" property="image" />
    <result column="class_id" jdbcType="INTEGER" property="classId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, bookname, bookinfo, price, saleNumber, publicSource, author, date, image, class_id
  </sql>
  <select id="selectByExample" parameterType="pojo.BookExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from book
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from book
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="pojo.BookExample">
    delete from book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="pojo.Book">
    insert into book (id, bookname, bookinfo, 
      price, saleNumber, publicSource, 
      author, date, image, 
      class_id)
    values (#{id,jdbcType=INTEGER}, #{bookname,jdbcType=VARCHAR}, #{bookinfo,jdbcType=VARCHAR}, 
      #{price,jdbcType=DECIMAL}, #{salenumber,jdbcType=INTEGER}, #{publicsource,jdbcType=VARCHAR}, 
      #{author,jdbcType=VARCHAR}, #{date,jdbcType=TIMESTAMP}, #{image,jdbcType=VARCHAR}, 
      #{classId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="pojo.Book">
    insert into book
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="bookname != null">
        bookname,
      </if>
      <if test="bookinfo != null">
        bookinfo,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="salenumber != null">
        saleNumber,
      </if>
      <if test="publicsource != null">
        publicSource,
      </if>
      <if test="author != null">
        author,
      </if>
      <if test="date != null">
        date,
      </if>
      <if test="image != null">
        image,
      </if>
      <if test="classId != null">
        class_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="bookname != null">
        #{bookname,jdbcType=VARCHAR},
      </if>
      <if test="bookinfo != null">
        #{bookinfo,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="salenumber != null">
        #{salenumber,jdbcType=INTEGER},
      </if>
      <if test="publicsource != null">
        #{publicsource,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="date != null">
        #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="image != null">
        #{image,jdbcType=VARCHAR},
      </if>
      <if test="classId != null">
        #{classId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="pojo.BookExample" resultType="java.lang.Long">
    select count(*) from book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update book
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.bookname != null">
        bookname = #{record.bookname,jdbcType=VARCHAR},
      </if>
      <if test="record.bookinfo != null">
        bookinfo = #{record.bookinfo,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.salenumber != null">
        saleNumber = #{record.salenumber,jdbcType=INTEGER},
      </if>
      <if test="record.publicsource != null">
        publicSource = #{record.publicsource,jdbcType=VARCHAR},
      </if>
      <if test="record.author != null">
        author = #{record.author,jdbcType=VARCHAR},
      </if>
      <if test="record.date != null">
        date = #{record.date,jdbcType=TIMESTAMP},
      </if>
      <if test="record.image != null">
        image = #{record.image,jdbcType=VARCHAR},
      </if>
      <if test="record.classId != null">
        class_id = #{record.classId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update book
    set id = #{record.id,jdbcType=INTEGER},
      bookname = #{record.bookname,jdbcType=VARCHAR},
      bookinfo = #{record.bookinfo,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DECIMAL},
      saleNumber = #{record.salenumber,jdbcType=INTEGER},
      publicSource = #{record.publicsource,jdbcType=VARCHAR},
      author = #{record.author,jdbcType=VARCHAR},
      date = #{record.date,jdbcType=TIMESTAMP},
      image = #{record.image,jdbcType=VARCHAR},
      class_id = #{record.classId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="pojo.Book">
    update book
    <set>
      <if test="bookname != null">
        bookname = #{bookname,jdbcType=VARCHAR},
      </if>
      <if test="bookinfo != null">
        bookinfo = #{bookinfo,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="salenumber != null">
        saleNumber = #{salenumber,jdbcType=INTEGER},
      </if>
      <if test="publicsource != null">
        publicSource = #{publicsource,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="date != null">
        date = #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="image != null">
        image = #{image,jdbcType=VARCHAR},
      </if>
      <if test="classId != null">
        class_id = #{classId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="pojo.Book">
    update book
    set bookname = #{bookname,jdbcType=VARCHAR},
      bookinfo = #{bookinfo,jdbcType=VARCHAR},
      price = #{price,jdbcType=DECIMAL},
      saleNumber = #{salenumber,jdbcType=INTEGER},
      publicSource = #{publicsource,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      date = #{date,jdbcType=TIMESTAMP},
      image = #{image,jdbcType=VARCHAR},
      class_id = #{classId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>





  <select id="getListBookByClass" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
     book.id, bookname, bookinfo, price, saleNumber, publicSource, author, book.date, book.image, book.class_id
    from book,category,category_class
    where category.id=#{id,jdbcType=INTEGER}
    and category.id=category_class.category_id
    and book.class_id=category_class.id
  </select>


</mapper>